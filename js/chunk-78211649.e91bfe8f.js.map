{"version":3,"sources":["webpack:///./src/mixins/overlayMixin.js","webpack:///./src/components/SolutionWithOverlay.vue?831c","webpack:///./src/views/Woche07Aufgabe2.vue?68ea","webpack:///./src/views/Woche07Aufgabe2.vue?bc47","webpack:///src/views/Woche07Aufgabe2.vue","webpack:///./src/views/Woche07Aufgabe2.vue?6054","webpack:///./src/views/Woche07Aufgabe2.vue?95a0","webpack:///./src/components/SolutionWithOverlay.vue?fcc5","webpack:///src/components/SolutionWithOverlay.vue","webpack:///./src/components/SolutionWithOverlay.vue?6990","webpack:///./src/components/SolutionWithOverlay.vue?e94d"],"names":["module","exports","open","document","getElementById","classList","toggle","disabled","overlay","style","display","close","render","_vm","this","_h","$createElement","_c","_self","staticClass","scopedSlots","_u","key","fn","_v","proxy","attrs","staticRenderFns","name","title","components","SolutionWithOverlay","component","on","_t","methods"],"mappings":"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","file":"js/chunk-78211649.e91bfe8f.js","sourcesContent":["module.exports = {\n    open() {\n        document.getElementById('solution-with-overlay').classList.toggle('open')\n        document.getElementById('openOverlayButton').disabled = true\n        const overlay = document.getElementById('overlay')\n        overlay.style.display = 'inline'\n    },\n\n    close() {\n        document.getElementById('solution-with-overlay').classList.toggle('open')\n        document.getElementById('openOverlayButton').disabled = false\n        const overlay = document.getElementById('overlay')\n        overlay.style.display = 'none'\n    }\n}","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/@vue/cli-service/node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SolutionWithOverlay.vue?vue&type=style&index=0&id=c5abef46&scoped=true&lang=css&\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/@vue/cli-service/node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Woche07Aufgabe2.vue?vue&type=style&index=0&id=2b6478e5&scoped=true&lang=css&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('solution-with-overlay',{staticClass:\"active\",scopedSlots:_vm._u([{key:\"exercise\",fn:function(){return [_vm._v(\" Schreiben Sie in Node.js zwei Programme merge_files.js und merge_streams.js, um große Dateien zu zeilenweise zusammenzuführen, merge_files.js mit fs.readFile und merge_streams.js mit Streams, also createReadFileStream und pipeline.\"),_c('br'),_c('br'),_c('ul',{staticClass:\"exerciseList\"},[_c('li',[_vm._v(\"node merge_files.js big_file1.txt big_file2.txt\")]),_c('li',[_vm._v(\"node merge_streams.js big_file1.txt big_file2.txt\")])]),_c('br'),_vm._v(\"Messen Sie anschließend die Performanz beider Programme. \")]},proxy:true},{key:\"solution\",fn:function(){return [_c('div',{staticClass:\"container\"},[_c('p',[_vm._v(\"merge_files.js\")]),_c('pre',[_c('highlight-code',{attrs:{\"lang\":\"javascript\"}},[_vm._v(\"\\n        const fs = require('fs').promises;\\n\\n        (async () => {\\n            const timeStart = Date.now()\\n            const input = process.argv.slice(2, 4)\\n            const [text1, text2] = await Promise.all([\\n                fs.readFile(input[0], 'utf-8'),\\n                fs.readFile(input[1], 'utf-8')\\n            ])\\n\\n            const lines1 = text1.split(\\\"\\\\r\\\\n\\\")\\n            const lines2 = text2.split(\\\"\\\\r\\\\n\\\")\\n\\n            let count = 0\\n            for (const line of lines1) {\\n                await console.log(line + lines2[count++])\\n            }\\n            await console.log(`Time needed: ${Date.now() - timeStart} ms for ${text1.replaceAll('\\\\r\\\\n', ' ').length} chars in every file`)\\n        })()\\n      \")])],1),_c('p',[_vm._v(\"merge_streams.js\")]),_c('pre',[_c('highlight-code',{attrs:{\"lang\":\"javascript\"}},[_vm._v(\"\\n        const fs = require('fs');\\n        const {pipeline} = require('stream/promises')\\n\\n        const timeStart = Date.now()\\n        const input = process.argv.slice(2, 4)\\n        let text1 = []\\n        let text2 = []\\n\\n        async function read1() {\\n            await pipeline(\\n                fs.createReadStream(input[0], 'utf-8'),\\n                async function (source) {\\n                    source.setEncoding('utf-8')\\n                    for await (const chunk of source) {\\n                        text1.push(chunk)\\n                    }\\n                }\\n            )\\n        }\\n\\n        async function read2() {\\n            await pipeline(\\n                fs.createReadStream(input[1], 'utf-8'),\\n                async function (source) {\\n                    source.setEncoding('utf-8')\\n                    for await (const chunk of source) {\\n                        text2.push(chunk)\\n                    }\\n                }\\n            )\\n        }\\n\\n        (async () => {\\n            await Promise.all([\\n                read1().catch(console.error),\\n                read2().catch(console.error)\\n            ])\\n\\n            text1 = text1.toString().split('\\\\r\\\\n')\\n            text2 = text2.toString().split('\\\\r\\\\n')\\n\\n            let i = 0\\n            for await (const line of text1) {\\n                console.log(line + ' ' + text2[i++])\\n            }\\n            console.log(`Time needed: ${Date.now() - timeStart} ms for ${text1.toString().replaceAll('\\\\r\\\\n', ' ').length} chars in every file`)\\n        })()\\n      \")])],1),_c('p',[_vm._v(\"Ergebnisse der Performanz-Messungen\")]),_c('ul',{staticClass:\"performanceList\"},[_c('li',[_vm._v(\"Textdatei jeweils 14813 chars\")]),_c('ul',[_c('li',[_vm._v(\"merge_files: 26ms\")]),_c('li',[_vm._v(\"merge_streams: 30ms\")])]),_c('li',[_vm._v(\"Textdatei jeweils 29627 chars\")]),_c('ul',[_c('li',[_vm._v(\"merge_files: 40ms\")]),_c('li',[_vm._v(\"merge_streams: 50ms\")])])])])]},proxy:true}])})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <solution-with-overlay class=\"active\">\n    <template v-slot:exercise>\n      Schreiben Sie in Node.js zwei Programme merge_files.js und merge_streams.js, um große Dateien zu zeilenweise\n      zusammenzuführen, merge_files.js mit fs.readFile und merge_streams.js mit Streams, also createReadFileStream und\n      pipeline.<br><br>\n      <ul class=\"exerciseList\">\n        <li>node merge_files.js big_file1.txt big_file2.txt</li>\n        <li>node merge_streams.js big_file1.txt big_file2.txt</li>\n      </ul>\n      <br>Messen Sie anschließend die Performanz beider Programme.\n    </template>\n    <template v-slot:solution>\n      <div class=\"container\">\n\n        <p>merge_files.js</p>\n        <pre><highlight-code lang=\"javascript\">\n          const fs = require('fs').promises;\n\n          (async () => {\n              const timeStart = Date.now()\n              const input = process.argv.slice(2, 4)\n              const [text1, text2] = await Promise.all([\n                  fs.readFile(input[0], 'utf-8'),\n                  fs.readFile(input[1], 'utf-8')\n              ])\n\n              const lines1 = text1.split(\"\\r\\n\")\n              const lines2 = text2.split(\"\\r\\n\")\n\n              let count = 0\n              for (const line of lines1) {\n                  await console.log(line + lines2[count++])\n              }\n              await console.log(`Time needed: ${Date.now() - timeStart} ms for ${text1.replaceAll('\\r\\n', ' ').length} chars in every file`)\n          })()\n        </highlight-code></pre>\n\n        <p>merge_streams.js</p>\n        <pre><highlight-code lang=\"javascript\">\n          const fs = require('fs');\n          const {pipeline} = require('stream/promises')\n\n          const timeStart = Date.now()\n          const input = process.argv.slice(2, 4)\n          let text1 = []\n          let text2 = []\n\n          async function read1() {\n              await pipeline(\n                  fs.createReadStream(input[0], 'utf-8'),\n                  async function (source) {\n                      source.setEncoding('utf-8')\n                      for await (const chunk of source) {\n                          text1.push(chunk)\n                      }\n                  }\n              )\n          }\n\n          async function read2() {\n              await pipeline(\n                  fs.createReadStream(input[1], 'utf-8'),\n                  async function (source) {\n                      source.setEncoding('utf-8')\n                      for await (const chunk of source) {\n                          text2.push(chunk)\n                      }\n                  }\n              )\n          }\n\n          (async () => {\n              await Promise.all([\n                  read1().catch(console.error),\n                  read2().catch(console.error)\n              ])\n\n              text1 = text1.toString().split('\\r\\n')\n              text2 = text2.toString().split('\\r\\n')\n\n              let i = 0\n              for await (const line of text1) {\n                  console.log(line + ' ' + text2[i++])\n              }\n              console.log(`Time needed: ${Date.now() - timeStart} ms for ${text1.toString().replaceAll('\\r\\n', ' ').length} chars in every file`)\n          })()\n        </highlight-code></pre>\n\n        <p>Ergebnisse der Performanz-Messungen</p>\n        <ul class=\"performanceList\">\n          <li>Textdatei jeweils 14813 chars</li>\n          <ul>\n            <li>merge_files: 26ms</li>\n            <li>merge_streams: 30ms</li>\n          </ul>\n          <li>Textdatei jeweils 29627 chars</li>\n          <ul>\n            <li>merge_files: 40ms</li>\n            <li>merge_streams: 50ms</li>\n          </ul>\n        </ul>\n      </div>\n    </template>\n  </solution-with-overlay>\n</template>\n\n<script>\nimport SolutionWithOverlay from \"@/components/SolutionWithOverlay\";\n\nexport default {\n  name: \"Woche07Aufgabe2\",\n  title: 'Web Engineering WS21/22 - Woche 7.2',\n  components: {\n    SolutionWithOverlay\n  },\n}\n</script>\n\n<style scoped>\n.container {\n  transition: 0.5s linear;\n}\n\n.exerciseList {\n  border: 1px solid black;\n  border-radius: 8px;\n  list-style: none;\n  padding: 5px 0;\n}\n\npre {\n  text-align: left;\n  margin: 10px;\n}\n\np {\n  font-weight: bold;\n}\n\n.performanceList {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: 10px;\n}\n</style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Woche07Aufgabe2.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Woche07Aufgabe2.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Woche07Aufgabe2.vue?vue&type=template&id=2b6478e5&scoped=true&\"\nimport script from \"./Woche07Aufgabe2.vue?vue&type=script&lang=js&\"\nexport * from \"./Woche07Aufgabe2.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Woche07Aufgabe2.vue?vue&type=style&index=0&id=2b6478e5&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"2b6478e5\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"solution-with-overlay\"}},[_c('button',{attrs:{\"id\":\"openOverlayButton\"},on:{\"click\":_vm.open}},[_c('b',[_vm._v(\"Aufgabe anzeigen\")])]),_c('div',{attrs:{\"id\":\"overlay\"}},[_c('button',{attrs:{\"id\":\"closeOverlayButton\"},on:{\"click\":_vm.close}},[_c('font-awesome-icon',{attrs:{\"icon\":\"fa-solid fa-x\"}})],1),_c('h3',[_vm._v(\"Aufgabe\")]),_c('div',{attrs:{\"id\":\"exerciseSlot\"}},[_vm._t(\"exercise\")],2)]),_c('div',{attrs:{\"id\":\"solution\"}},[_vm._t(\"solution\")],2)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div id=\"solution-with-overlay\">\n    <button id=\"openOverlayButton\" v-on:click=\"open\"><b>Aufgabe anzeigen</b></button>\n    <div id=\"overlay\">\n      <button id=\"closeOverlayButton\" v-on:click=\"close\">\n        <font-awesome-icon icon=\"fa-solid fa-x\"/>\n      </button>\n      <h3>Aufgabe</h3>\n      <div id=\"exerciseSlot\">\n        <slot name=\"exercise\"></slot>\n      </div>\n    </div>\n    <div id=\"solution\">\n      <slot name=\"solution\"></slot>\n    </div>\n  </div>\n</template>\n\n<script>\nimport overlayMixin from \"@/mixins/overlayMixin\";\n\nexport default {\n  name: \"SolutionWithOverlay\",\n  methods: {\n    open: () => overlayMixin.open(),\n    close: () => overlayMixin.close(),\n  }\n}\n</script>\n\n<style scoped>\n#solution-with-overlay {\n  height: calc(100vh - 61px);\n}\n\n#solution-with-overlay.active {\n  height: 100vh;\n}\n\n#openOverlayButton {\n  margin: 10px 0 5px 0;\n  padding: 0 10px;\n  height: 25px;\n}\n\n#overlay {\n  display: none;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  border: 2px solid black;\n  border-radius: 8px;\n  background: deepskyblue;\n  z-index: 999999999;\n}\n\n#closeOverlayButton {\n  position: absolute;\n  top: 5px;\n  left: calc(100% - 15px);\n  background: transparent;\n  border: transparent;\n}\n\nh3 {\n  margin: 10px 0;\n}\n\n#exerciseSlot {\n  margin: 0 10px 10px;\n}\n\n#solution {\n  height: calc(100vh - 40px - 61px);\n  width: 100vw;\n}\n\n.active #solution {\n  height: calc(100vh - 40px);\n  width: calc(100vw - 378px);\n}\n\n.open #solution {\n  opacity: 0.2;\n}\n</style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SolutionWithOverlay.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SolutionWithOverlay.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./SolutionWithOverlay.vue?vue&type=template&id=c5abef46&scoped=true&\"\nimport script from \"./SolutionWithOverlay.vue?vue&type=script&lang=js&\"\nexport * from \"./SolutionWithOverlay.vue?vue&type=script&lang=js&\"\nimport style0 from \"./SolutionWithOverlay.vue?vue&type=style&index=0&id=c5abef46&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"c5abef46\",\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}